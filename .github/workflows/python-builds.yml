name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v3

    - name: Clone remote repository
      run: |
        git clone https://github.com/david-bouyssie/mzcore.git ../mzcore

    - uses: PyO3/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: -o dist --strip --find-interpreter
        working-directory: mzio-py

    - name: Upload wheels to artifact
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: mzio-py/dist

  windows:
    runs-on: windows-latest
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v3

    - name: Clone remote repository
      run: |
        git clone https://github.com/david-bouyssie/mzcore.git ../mzcore
        ls ./

    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: -o dist --strip --find-interpreter
        working-directory: mzio-py

    - name: Upload wheels to artifact
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: mzio-py/dist

  macos:
    runs-on: macos-latest
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v3

    - name: Clone remote repository
      run: |
        git clone https://github.com/david-bouyssie/mzcore.git ../mzcore
        ls ./

    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: -o dist --strip --find-interpreter --target universal2-apple-darwin
        working-directory: mzio-py

    - name: Upload wheels to artifact
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: mzio-py/dist

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   if: "startsWith(github.ref, 'refs/tags/')"
  #   needs: [ macos, windows, linux ]
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: wheels
  #     - name: Publish to PyPI
  #       uses: PyO3/maturin-action@v1
  #       env:
  #         MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  #       with:
  #         command: upload
  #         args: --skip-existing *
